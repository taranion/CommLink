name: Compile Windows Self
on: [push]
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  LANG: "de_DE.UTF-8"

jobs:
  compile-windows-native:
    runs-on: [self-hosted, Windows]
    steps:
    - name: checkout sources
      uses: actions/checkout@v2
 
    # Setup the Windows build environment
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Visual Studio shell
      uses: egor-tensin/vs-shell@v2

    - name: Get version (bash)
      continue-on-error: true
      shell: bash -l {0}
      run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: setup-graalvm-ce
      uses: gluonhq/setup-graalvm@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Compile
      run:  mvn -U -s settings.xml clean gluonfx:compile
      env: 
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASS: ${{ secrets.JFROG_PASS }}
        LANG: de_DE

    - name: Link
      run:  mvn -U -s settings.xml gluonfx:link
        
    - name: Show result
      run: ls target/gluonfx/x86_64-windows

    - name: Package
      run:  mvn gluonfx:package
        
    - name: Show result Native
      run: ls target/gluonfx/x86_64-windows

    - name: Prepare staging
      run: | 
        mkdir Staging ; 
        cp target/gluonfx/x86_64-windows/CommLink6.exe Staging/Commlink6_Native_${{ env.RELEASE_VERSION }}.exe; 
        cp target/gluonfx/x86_64-windows/CommLink6-*msi Staging/Commlink6_Native_${{ env.RELEASE_VERSION }}.msi ; 
        dir Staging

    - name: Logs
      if: always()      
      run: cat target\gluonfx\x86_64-windows/gvm/log/client-debug0.log

    - name: Show created WIX config file
      run: cat target\gluonfx\x86_64-windows\gvm\tmp\tmpMSI\config\main.wxs 
        
    - name: Show Staging content
      run: ls Staging

#    - name: Upload Windows binary
#      continue-on-error: true
#      uses: actions/upload-artifact@v1
#      with:
#        name: CommLink6-Windows-Executable-${{ env.RELEASE_VERSION }}
#        path: target/gluonfx/x86_64-windows/CommLink6.exe
#
#    - name: Upload Windows MSI
#      continue-on-error: true
#      uses: actions/upload-artifact@v1
#      with:
#        name: CommLink6-Windows-Installer-${{ env.RELEASE_VERSION }}
#        path: target/gluonfx/x86_64-windows/Commlink6-${{ env.RELEASE_VERSION }}.msi
      
    - name: Deploy EXE
      continue-on-error: true
      uses: garygrossgarten/github-action-scp@release
      with:
        local: "target\\gluonfx\\x86_64-windows\\CommLink6.exe"
        remote: /var/www/html/commlink6-builds/win/CommLink6-${{env.RELEASE_VERSION}}.exe
        host: eden.rpgframework.de
        username: ghcommlink
        password: ${{ secrets.DEPLOY_PASSWORD }}
      
    - name: Deploy MSI
      continue-on-error: true
      uses: garygrossgarten/github-action-scp@release
      with:
        local: "target\\gluonfx\\x86_64-windows\\Commlink6-${{ env.RELEASE_VERSION }}.msi"
        remote: /var/www/html/commlink6-builds/win/Commlink6-${{env.RELEASE_VERSION}}.msi
        host: eden.rpgframework.de
        username: ghcommlink
        password: ${{ secrets.DEPLOY_PASSWORD }}

  compile-windows-jre:
    runs-on: [self-hosted, Windows]
    steps:
    - name: checkout sources
      uses: actions/checkout@v2
 
    # Setup the Windows build environment
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Visual Studio shell
      continue-on-error: true
      uses: egor-tensin/vs-shell@v2

    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-    

    - name: Get version (bash)
      shell: bash -l {0}
      run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: setup-graalvm-ce
      uses: gluonhq/setup-graalvm@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Compile
      run:  mvn  -U -s settings.xml clean package jpackage:jpackage@win
      env: 
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASS: ${{ secrets.JFROG_PASS }}
        LANG: de_DE
        
    - name: Show result JPackage
      run: ls target/jpackage ; mkdir Staging
      
    - name: Deploy MSI
      uses: garygrossgarten/github-action-scp@release
      with:
        local: "target\\jpackage\\Commlink6-${{env.RELEASE_VERSION}}.msi"
        remote: /var/www/html/commlink6-builds/win/CommLink6-JRE-${{env.RELEASE_VERSION}}.msi
        host: eden.rpgframework.de
        username: ghcommlink
        password: ${{ secrets.DEPLOY_PASSWORD }}
       